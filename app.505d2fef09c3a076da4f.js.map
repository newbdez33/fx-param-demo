{"version":3,"sources":["webpack:///./app/components/Footer/style.css?30f7","webpack:///./app/components/TodoTextInput/style.css?71e8","webpack:///./app/components/TodoList/style.css?14c4","webpack:///./app/index.tsx","webpack:///./app/containers/App/style.css","webpack:///./app/models/TodoModel.ts","webpack:///./app/utils/index.ts","webpack:///./app/components/Footer/index.tsx","webpack:///./app/components/Header/index.tsx","webpack:///./app/components/TodoList/index.tsx","webpack:///./app/components/TodoTextInput/index.tsx","webpack:///./app/components/TodoItem/index.tsx","webpack:///./app/containers/App/index.tsx","webpack:///./app/middleware/logger.ts","webpack:///./app/reducers/todos.ts","webpack:///./app/reducers/index.ts","webpack:///./app/store/index.ts","webpack:///./main.tsx","webpack:///./app/actions/todos.ts","webpack:///./app/components/TodoItem/style.css?4c11"],"names":["module","exports","App","path","component","TodoModel","omit","target","Object","keys","reduce","res","key","omitKeys","includes","Filter","FILTER_TITLES","SHOW_ALL","SHOW_ACTIVE","SHOW_COMPLETED","renderTodoCount","activeCount","itemWord","className","renderFilterLink","filter","onClickFilter","selectedFilter","style","cursor","onClick","children","renderClearButton","completedCount","onClickClearCompleted","render","this","map","defaultProps","props","context","handleSave","bind","startLotField","fixPrice","p","n","m","Math","pow","round","console","log","list","v","current","value","startLot","Number","gid","count","i","push","id","price","lot","completed","addTodo","marginBottom","marginLeft","type","width","height","placeholder","ref","backgroundColor","renderList","todos","length","l","symbolGid","state","text","handleBlur","handleSubmit","handleChange","event","currentTarget","trim","which","onSave","newTodo","setState","classes","editing","autoFocus","onBlur","onChange","onKeyDown","handleDoubleClick","deleteTodo","element","todo","completeTodo","checked","onDoubleClick","FILTER_VALUES","FILTER_FUNCTIONS","handleClearCompleted","handleFilterChange","some","actions","clearCompleted","history","filteredTodos","ownProps","hash","location","replace","find","dispatch","logger","store","next","action","todoReducer","handleActions","Type","ADD_TODO","payload","DELETE_TODO","COMPLETE_TODO","COMPLETE_ALL","CLEAR_COMPLETED","rootReducer","initialState","middleware","Router","document","getElementById","TodoActions","editTodo","EDIT_TODO","completeAll"],"mappings":"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","file":"app.505d2fef09c3a076da4f.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_11G5b\",\"filters\":\"_2Rdg5\",\"selected\":\"KA4tP\",\"count\":\"_2aiYj\",\"clearCompleted\":\"_2VhED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new\":\"_1LCq9\",\"edit\":\"_2TStV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"_1MAoA\",\"normal\":\"l9hMg\",\"editing\":\"_2LE8Z\",\"edit\":\"_3IEu8\",\"view\":\"cswuJ\",\"toggle\":\"_1euYG\",\"completed\":\"_1VEnC\",\"destroy\":\"_3_fjc\",\"toggleAll\":\"_1L1bM\"};","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { App as FxApp } from 'app/containers/App';\nimport { hot } from 'react-hot-loader';\n\nexport const App = hot(module)(() => (\n  <Switch>\n    <Route path=\"/\" component={FxApp} />\n  </Switch>\n));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_1XP1U\"};","/** TodoMVC model definitions **/\n\nexport interface TodoModel {\n  id: number;\n  gid: number;\n  lot: number;\n  price: number;\n  completed: boolean;\n}\n\nexport namespace TodoModel {\n  export enum Filter {\n    SHOW_ALL = 'all',\n    SHOW_ACTIVE = 'active',\n    SHOW_COMPLETED = 'completed'\n  }\n}\n","export function omit<T extends object, K extends keyof T>(target: T, ...omitKeys: K[]): Omit<T, K> {\n  return (Object.keys(target) as K[]).reduce(\n    (res, key) => {\n      if (!omitKeys.includes(key)) {\n        res[key] = target[key];\n      }\n      return res;\n    },\n    {} as any\n  );\n}\n","import * as React from 'react';\nimport * as style from './style.css';\nimport * as classNames from 'classnames';\nimport { TodoModel } from 'app/models';\n\nexport const FILTER_TITLES = {\n  [TodoModel.Filter.SHOW_ALL]: 'All',\n  [TodoModel.Filter.SHOW_ACTIVE]: 'Active',\n  [TodoModel.Filter.SHOW_COMPLETED]: 'Completed'\n};\n\nexport namespace Footer {\n  export interface Props {\n    filter: TodoModel.Filter;\n    activeCount?: number;\n    completedCount?: number;\n    onClickFilter: (filter: TodoModel.Filter) => any;\n    onClickClearCompleted: () => any;\n  }\n}\n\nexport class Footer extends React.Component<Footer.Props> {\n  static defaultProps: Partial<Footer.Props> = {\n    activeCount: 0,\n    completedCount: 0\n  };\n\n  renderTodoCount(): JSX.Element {\n    const { activeCount } = this.props;\n    const itemWord = activeCount === 1 ? 'item' : 'items';\n\n    return (\n      <span className={style.count}>\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n    );\n  }\n\n  renderFilterLink(filter: TodoModel.Filter): JSX.Element {\n    const { filter: selectedFilter, onClickFilter } = this.props;\n\n    return (\n      <a\n        className={classNames({ [style.selected]: filter === selectedFilter })}\n        style={{ cursor: 'pointer' }}\n        onClick={() => onClickFilter(filter)}\n        children={FILTER_TITLES[filter]}\n      />\n    );\n  }\n\n  renderClearButton(): JSX.Element | void {\n    const { completedCount, onClickClearCompleted } = this.props;\n    if (completedCount! > 0) {\n      return (\n        <button\n          className={style.clearCompleted}\n          onClick={onClickClearCompleted}\n          children={'Clear completed'}\n        />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <footer className={style.normal}>\n        {this.renderTodoCount()}\n        <ul className={style.filters}>\n          {(Object.keys(TodoModel.Filter) as (keyof typeof TodoModel.Filter)[]).map((key) => (\n            <li key={key} children={this.renderFilterLink(TodoModel.Filter[key])} />\n          ))}\n        </ul>\n        {this.renderClearButton()}\n      </footer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { TodoActions } from 'app/actions/todos';\nimport { TodoModel } from 'app/models';\n\nexport namespace Header {\n  export interface Props {\n    addTodo: typeof TodoActions.addTodo;\n  }\n}\n\nexport class Header extends React.Component<Header.Props> {\n  startLotField: React.RefObject<HTMLInputElement>;\n  constructor(props: Header.Props, context?: any) {\n    super(props, context);\n    this.handleSave = this.handleSave.bind(this);\n    this.startLotField = React.createRef();\n  }\n\n  fixPrice(p:number, n:number = 3) {\n    let m = Math.pow(10, n)\n    return Math.round(p * m) / m\n}\n\n  handleSave() {\n    console.log(\"handleSave\")\n    let list:TodoModel[] = []\n    var v = \"0.001\"\n    console.log(this.startLotField.current)\n    if ( this.startLotField.current?.value ) {\n      v = this.startLotField.current?.value\n    }\n    console.log(v)\n    let startLot:number = Number(v)\n    let startPrice = 1.11451\n    let basePoint = 0.00001\n    for ( var gid = 1; gid <= 8; gid++ ) {\n      let count = gid+1\n      for ( var i = 1; i <= count; i++ ) {\n        let p = startPrice + basePoint * Math.pow(2, i - 1) - basePoint\n        list.push({\n          gid:gid,\n          id:i,\n          price:this.fixPrice(p, 5),\n          lot:Math.pow(2, i-1) * startLot,\n          completed:false\n        })\n      }\n    }\n    this.props.addTodo(list);\n  }\n\n  render() {\n    return (\n      <header>\n        <h1>fx params test</h1>\n        <div style={{ marginBottom:'10px', marginLeft:'10px'}}>\n          Start Lot: <input type=\"text\" style={{ width:'50px', height:'25px' }} placeholder=\"0.001\" ref={this.startLotField} />\n          <button style={{ backgroundColor:'#C2C1A5', marginLeft:'10px', height:'30px', width:'50px'}} onClick={this.handleSave} >Build</button>\n        </div>\n      </header>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as style from './style.css';\nimport { TodoActions } from 'app/actions/todos';\nimport { TodoModel } from 'app/models/TodoModel';\n\nexport namespace TodoList {\n    export interface Props {\n        todos: TodoModel[];\n        actions: TodoActions;\n    }\n}\n\nexport class TodoList extends React.Component<TodoList.Props> {\n    renderList() {\n        let list = [];\n        for (let i = 0; i < this.props.todos.length; i++) {\n            let l = this.props.todos[i];\n            if ( l.id == 1 ) {\n                list.push(<div key={`${l.gid}-0`}>─────────────────</div>);\n            }\n            list.push(<div key={`${l.gid}-${l.id}`}>{this.symbolGid(l.id)} {l.lot} ✕ {l.price}</div>);\n        }\n        if ( list.length > 0 ) {\n            list.push(<div key={`0-0`}>─────────────────</div>);\n        }\n        return list;\n    }\n\n    symbolGid(gid: number): string {\n        switch (gid) {\n            case 1:\n                return '➀';\n            case 2:\n                return '➁';\n            case 3:\n                return '➂';\n            case 4:\n                return '➃';\n            case 5:\n                return '➄';\n            case 6:\n                return '➅';\n            case 7:\n                return '➆';\n            case 8:\n                return '➇';\n            case 9:\n                return '➈';\n        }\n        return '';\n    }\n\n    render() {\n        //const { todos, actions } = this.props;\n        return (\n            <section className={style.main}>\n                <ul className={style.normal} style={{ marginLeft: '10px' }}>\n                    {this.renderList()}\n                </ul>\n            </section>\n        );\n    }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as style from './style.css';\n\nexport namespace TodoTextInput {\n  export interface Props {\n    text?: string;\n    placeholder?: string;\n    newTodo?: boolean;\n    editing?: boolean;\n    onSave: (text: string) => void;\n  }\n\n  export interface State {\n    text: string;\n  }\n}\n\nexport class TodoTextInput extends React.Component<TodoTextInput.Props, TodoTextInput.State> {\n  constructor(props: TodoTextInput.Props, context?: any) {\n    super(props, context);\n    this.state = { text: this.props.text || '' };\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event: React.KeyboardEvent<HTMLInputElement>) {\n    const text = event.currentTarget.value.trim();\n    if (event.which === 13) {\n      this.props.onSave(text);\n      if (this.props.newTodo) {\n        this.setState({ text: '' });\n      }\n    }\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ text: event.target.value });\n  }\n\n  handleBlur(event: React.FocusEvent<HTMLInputElement>) {\n    const text = event.target.value.trim();\n    if (!this.props.newTodo) {\n      this.props.onSave(text);\n    }\n  }\n\n  render() {\n    const classes = classNames(\n      {\n        [style.edit]: this.props.editing,\n        [style.new]: this.props.newTodo\n      },\n      style.normal\n    );\n\n    return (\n      <input\n        className={classes}\n        type=\"text\"\n        autoFocus\n        placeholder={this.props.placeholder}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as style from './style.css';\nimport { TodoModel } from 'app/models';\nimport { TodoActions } from 'app/actions';\nimport { TodoTextInput } from '../TodoTextInput';\n\nexport namespace TodoItem {\n  export interface Props {\n    todo: TodoModel;\n    editTodo: typeof TodoActions.editTodo;\n    deleteTodo: typeof TodoActions.deleteTodo;\n    completeTodo: typeof TodoActions.completeTodo;\n  }\n\n  export interface State {\n    editing: boolean;\n  }\n}\n\nexport class TodoItem extends React.Component<TodoItem.Props, TodoItem.State> {\n  constructor(props: TodoItem.Props, context?: any) {\n    super(props, context);\n    this.state = { editing: false };\n  }\n\n  handleDoubleClick() {\n    this.setState({ editing: true });\n  }\n\n  handleSave(id: number, text: string) {\n    if (text.length === 0) {\n      this.props.deleteTodo(id);\n    } else {\n      //this.props.editTodo({ id, 0 });\n    }\n    this.setState({ editing: false });\n  }\n\n  render() {\n    const { todo, completeTodo, deleteTodo } = this.props;\n\n    let element;\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput\n          text={`${todo.lot}`}\n          editing={this.state.editing}\n          onSave={(text) => todo.id && this.handleSave(todo.id, text)}\n        />\n      );\n    } else {\n      element = (\n        <div className={style.view}>\n          <input\n            className={style.toggle}\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => todo.id && completeTodo(todo.id)}\n          />\n          <label onDoubleClick={() => this.handleDoubleClick()}>{`${todo.lot}`}</label>\n          <button\n            className={style.destroy}\n            onClick={() => {\n              if (todo.id) deleteTodo(todo.id);\n            }}\n          />\n        </div>\n      );\n    }\n\n    // TODO: compose\n    const classes = classNames({\n      [style.completed]: todo.completed,\n      [style.editing]: this.state.editing,\n      [style.normal]: !this.state.editing\n    });\n\n    return <li className={classes}>{element}</li>;\n  }\n}\n","import * as React from 'react';\nimport * as style from './style.css';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RouteComponentProps } from 'react-router';\nimport { TodoActions } from 'app/actions';\nimport { RootState } from 'app/reducers';\nimport { TodoModel } from 'app/models';\nimport { omit } from 'app/utils';\nimport { Header, TodoList } from 'app/components';\n\nconst FILTER_VALUES = (Object.keys(TodoModel.Filter) as (keyof typeof TodoModel.Filter)[]).map(\n  (key) => TodoModel.Filter[key]\n);\n\nconst FILTER_FUNCTIONS: Record<TodoModel.Filter, (todo: TodoModel) => boolean> = {\n  [TodoModel.Filter.SHOW_ALL]: () => true,\n  [TodoModel.Filter.SHOW_ACTIVE]: (todo) => !todo.completed,\n  [TodoModel.Filter.SHOW_COMPLETED]: (todo) => todo.completed\n};\n\nexport namespace App {\n  export interface Props extends RouteComponentProps<void> {\n    todos: RootState.TodoState;\n    actions: TodoActions;\n    filter: TodoModel.Filter;\n  }\n}\n\n@connect(\n  (state: RootState, ownProps): Pick<App.Props, 'todos' | 'filter'> => {\n    const hash = ownProps.location && ownProps.location.hash.replace('#', '');\n    const filter = FILTER_VALUES.find((value) => value === hash) || TodoModel.Filter.SHOW_ALL;\n    return { todos: state.todos, filter };\n  },\n  (dispatch: Dispatch): Pick<App.Props, 'actions'> => ({\n    actions: bindActionCreators(omit(TodoActions, 'Type'), dispatch)\n  })\n)\nexport class App extends React.Component<App.Props> {\n  static defaultProps: Partial<App.Props> = {\n    filter: TodoModel.Filter.SHOW_ALL\n  };\n\n  constructor(props: App.Props, context?: any) {\n    super(props, context);\n    this.handleClearCompleted = this.handleClearCompleted.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  handleClearCompleted(): void {\n    const hasCompletedTodo = this.props.todos.some((todo) => todo.completed || false);\n    if (hasCompletedTodo) {\n      this.props.actions.clearCompleted();\n    }\n  }\n\n  handleFilterChange(filter: TodoModel.Filter): void {\n    this.props.history.push(`#${filter}`);\n  }\n\n  render() {\n    const { todos, actions, filter } = this.props;\n    //const activeCount = todos.length - todos.filter((todo) => todo.completed).length;\n    const filteredTodos = filter ? todos.filter(FILTER_FUNCTIONS[filter]) : todos;\n    //const completedCount = todos.reduce((count, todo) => (todo.completed ? count + 1 : count), 0);\n\n    return (\n      <div className={style.normal}>\n        <Header addTodo={actions.addTodo} />\n        <TodoList todos={filteredTodos} actions={actions} />\n        {/* <Footer\n          filter={filter}\n          activeCount={activeCount}\n          completedCount={completedCount}\n          onClickClearCompleted={this.handleClearCompleted}\n          onClickFilter={this.handleFilterChange}\n        /> */}\n      </div>\n    );\n  }\n}\n","import { Middleware } from 'redux';\n\nexport const logger: Middleware = (store) => (next) => (action) => {\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(action);\n  }\n  return next(action);\n};\n","import { handleActions } from 'redux-actions';\nimport { RootState } from './state';\nimport { TodoActions } from 'app/actions/todos';\n\nconst initialState: RootState.TodoState = [];\n\nexport const todoReducer = handleActions<RootState.TodoState>(\n  {\n    [TodoActions.Type.ADD_TODO]: (state, action) => {\n      if (action.payload) {\n        console.log(action.payload);\n        return action.payload;\n      }\n      return state;\n    },\n    // [TodoActions.Type.ADD_TODO]: (state, action) => {\n    //   if (action.payload && action.payload.lot) {\n    //     return [\n    //       {\n    //         id: state.reduce((max, todo) => Math.max(todo.id || 1, max), 0) + 1,\n    //         completed: false,\n    //         lot: action.payload.lot,\n    //         gid: 0,\n    //         price: 0\n    //       },\n    //       ...state\n    //     ];\n    //   }\n    //   return state;\n    // },\n    [TodoActions.Type.DELETE_TODO]: (state, action) => {\n      return state\n    },\n    [TodoActions.Type.COMPLETE_TODO]: (state, action) => {\n      return state\n    },\n    [TodoActions.Type.COMPLETE_ALL]: (state, action) => {\n      return state\n    },\n    [TodoActions.Type.CLEAR_COMPLETED]: (state, action) => {\n      return state\n    }\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport { RootState } from './state';\nimport { todoReducer } from './todos';\n\nexport { RootState };\n\n// NOTE: current type definition of Reducer in 'redux-actions' module\n// doesn't go well with redux@4\nexport const rootReducer = combineReducers<RootState>({\n  todos: todoReducer as any\n});\n","import { Store, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { logger } from 'app/middleware';\nimport { RootState, rootReducer } from 'app/reducers';\n\nexport function configureStore(initialState?: RootState): Store<RootState> {\n  let middleware = applyMiddleware(logger);\n\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = composeWithDevTools(middleware);\n  }\n\n  const store = createStore(rootReducer as any, initialState as any, middleware) as Store<\n    RootState\n  >;\n\n  if (module.hot) {\n    module.hot.accept('app/reducers', () => {\n      const nextReducer = require('app/reducers');\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { configureStore } from 'app/store';\nimport { Router } from 'react-router';\nimport { App } from './app';\n\n// prepare store\nconst history = createBrowserHistory();\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createAction } from 'redux-actions';\nimport { TodoModel } from 'app/models';\n\nexport namespace TodoActions {\n  export enum Type {\n    ADD_TODO = 'ADD_TODO',\n    EDIT_TODO = 'EDIT_TODO',\n    DELETE_TODO = 'DELETE_TODO',\n    COMPLETE_TODO = 'COMPLETE_TODO',\n    COMPLETE_ALL = 'COMPLETE_ALL',\n    CLEAR_COMPLETED = 'CLEAR_COMPLETED'\n  }\n\n  export const addTodo = createAction<TodoModel[]>(Type.ADD_TODO);\n  export const editTodo = createAction<PartialPick<TodoModel, 'id'>>(Type.EDIT_TODO);\n  export const deleteTodo = createAction<TodoModel['id']>(Type.DELETE_TODO);\n  export const completeTodo = createAction<TodoModel['id']>(Type.COMPLETE_TODO);\n  export const completeAll = createAction(Type.COMPLETE_ALL);\n  export const clearCompleted = createAction(Type.CLEAR_COMPLETED);\n}\n\nexport type TodoActions = Omit<typeof TodoActions, 'Type'>;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_3Ivjf\",\"toggle\":\"gyYcA\",\"destroy\":\"_6oXTL\",\"edit\":\"Dlke2\",\"editing\":\"atkUq _3Ivjf\",\"view\":\"R2I1d\",\"completed\":\"_2d4Cr\"};"],"sourceRoot":""}